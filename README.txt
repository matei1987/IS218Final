a.	What is unit testing, how is it implemented, and why is it important?
	Unit testing is used in order to make sure that any new updates to the code do not break parts of the system. When writing code it is common to use the same code over multiple parts of the system to perform different functions. If you make a mistake, this can commonly cause a ripple effect. Unit testing is done to make sure that when editing code, it doesn’t break any other parts of the system.
b.	What is functional testing, how is it implemented, and why is it important?
	Functional testing is giving the function an input and examining the output. It is implemented by running a function with a given input. Then, one must examine the output to determine if the function is in working order. Functional testing is important because it determines which functions are working correctly or not.
c.	What is the significance and usage of automated unit testing in software development?
	The significance and usage of automated unit testing is to ensure quality throughout a system. When you take advantage of unit testing you can rest assured that your code is going to work. The point of unit testing is to isolate components of the system as much as possible and make sure they’re in working order. The main use of automated unit testing is to make sure there are no unforeseen errors. Many times as programmers we think we have implemented a change that was bug free only to find out it caused errors. Unit testing avoids this situation.
d.	Where would you commonly find automated unit testing implemented?  Can you find any documentation online that describes this and post a link to it?
	Automated unit testing is mainly found in larger scale applications. This is due to the fact that unit testing takes time to code and implement. For every line of code that is written, it requires more lines of unit testing to be written. This is why it is sometimes not worth it to set up unit testing for a smaller scale application. Here is a link that describes how to use unit testing: http://programmers.stackexchange.com/questions/89064/how-and-when-to-use-unit-testing-properly
e.	 What is test driven development and how can it improve the management and quality of software projects.
	Test driven development is creating the unit test before actually creating the class. This helps to improve management and quality of software projects because the programmer knows what he needs to program before he begins to write any code. This way, he has a clear objective on what needs to be done in order to have it work.

